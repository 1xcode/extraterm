/**
 * Copyright 2016 Simon Edwards <simon@simonzone.com>
 */
@import "general-gui/pxToRem";
@import "general-gui/variables";

$tab-background-color-active: $background-color;

$tab-radius: pxToRem(3px);
$modified-icon-width: pxToRem(8px);
$tab-skew: 30deg;
$tab-top-padding: 0;

$tab-bottom-border-height: pxToRem(5px);
$tab-border: 1px solid $tab-border-color;
$tab-bar-bottom-border-color: #111111;
$tab-max-width: 20rem;

$tab-background-color: #e8e8e8;

.extraterm-tabs {
  display: flex;
  -webkit-user-select: none;
  list-style: none;
  position: relative;
  margin: 0;
  height: $tab-height + $tab-top-padding + $tab-bottom-border-height;
  background: $tab-background-color;
  background-image: -webkit-linear-gradient(top, $tab-bar-background-color, lighten($tab-bar-background-color, 9%));

  box-shadow: inset 0 pxToRem(-8px) pxToRem(8px) pxToRem(-4px) rgba(0,0,0, .15);
  padding: 0 0 0 0;
  overflow-x: auto;
  overflow-y: hidden;

  &::-webkit-scrollbar {
    display: none;
  }

  // The horizontal line which the tabs sit on.
  &:after {
    content: "";
    position: absolute;
    box-sizing: border-box;
    bottom: 0;
    height: $tab-bottom-border-height;
    left: 0;
    right: 0;
    background-color: $tab-background-color-active;
    border-top: 1px solid $tab-border-color;
    pointer-events: none;
  }

  & > LI.tab {
    position: relative;
    display: inline-block;
    top: $tab-top-padding;

    box-sizing: border-box;
    flex: 1;
    -webkit-user-drag: element;
    max-width: $tab-max-width;
    height: $tab-height;
    line-height: $tab-height;
    color: $text-color;
    padding: 0;
    margin: 0 pxToRem(20px) 0 pxToRem(5px);
    border: none;
    
    box-shadow: inset -1px -1px 1px rgba(0,0,0, .05);
    transition: color .1s ease-in;

    &, &:before, &:after {
      box-sizing: border-box;

      background-image: -webkit-linear-gradient(top, $tab-background-color, darken($tab-background-color, 6%));
      border-top: $tab-border;
      height: $tab-height;
    }

    &:before, &:after {
      content: '';
      position: absolute;
      top: -1px;
      width: pxToRem(25px);
      height: $tab-height;
    }

    // left angled edge
    &:before {
      left: pxToRem(-14px);
      border-top-left-radius: $tab-radius;
      border-left: $tab-border;
      box-shadow: inset 1px -1px 1px rgba(0,0,0, .05);
      -webkit-transform: skewX(-$tab-skew);
    }

    // right angled edge
    &:after {
      right: pxToRem(-14px);
      border-top-right-radius: $tab-radius;
      border-right: $tab-border;
      box-shadow: inset pxToRem(-1px) pxToRem(-1px) pxToRem(1px) rgba(0,0,0, .05);
      -webkit-transform: skewX($tab-skew);       
    }

    .close-icon {
      right: 0;
      z-index: 3;
      text-align: right;
      line-height: $tab-height;
      color: $text-color;

      &:hover {
        color: inherit;
      }
    }

    & > * {
      position: relative;
      z-index: 1;
      margin-top: -$tab-top-padding - pxToRem(1px);
      padding-top: $tab-top-padding + pxToRem(1px);
      padding-right: pxToRem(10px);
    }
  }

  & > LI.tab.active {
    z-index: 1;
    color: $text-highlight-color;
    width: -webkit-fit-content;
    flex: 2;
    .close-icon {
      line-height: $tab-height - pxToRem(1px);
      color: $text-color;
    }

    &, &:before, &:after {
      background: $tab-background-color-active;
      height: $tab-height + pxToRem(1px);
      box-shadow: none;       
    }
  }

  & > LI.tab:hover {
    color: $text-highlight-color;
  }

  & > LI.tab.active:hover .close-icon {
    color: $text-color;

    &:hover {
      color: inherit;
    }
  }

  & > LI.remainder-left {
    margin: 0 pxToRem(20px) 0 pxToRem(5px);
  }

  & > LI.remainder {
    padding-bottom: $tab-bottom-border-height;
  }

  .placeholder {
    height: $tab-height + $tab-top-padding + $tab-bottom-border-height;
    margin-left: pxToRem(-9px); // center between tabs
    pointer-events: none;
    &:after {
      top: $tab-height + $tab-top-padding + $tab-bottom-border-height - pxToRem(2px);
    }
  }
}
